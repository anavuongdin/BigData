version: "3.6"
volumes:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local
  es-data:
    driver: local
  hadoop_namenode:
  hadoop_datanode_01:
  hadoop_datanode_02: 

networks:
  capstone_project:
    name: capstone_project 
   

services:
############################ HDFS #################################
  namenode:
    image: bde2020/hadoop-namenode
    container_name: namenode
    restart: always
    networks:
      - capstone_project
    ports:
      - 9870:9870
      - 9000:9000
      - 19888:19888
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=4_nodes_capstone_project
    env_file:
      - ./hadoop.env



  datanode_01:
    image: bde2020/hadoop-datanode
    container_name: datanode_01
    restart: always
    networks:
      - capstone_project
    ports:
      - 50075:50075
    volumes:
      - hadoop_datanode_01:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  datanode_02:
    image: bde2020/hadoop-datanode
    container_name: datanode_02
    restart: always
    networks:
      - capstone_project
    ports:
      - 50076:50075
    volumes:
      - hadoop_datanode_02:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  
    
############################## jupyterlab ################################# 
  jupyterlab:
    image: jupyterlab
    container_name: jupyterlab
    networks:
      - capstone_project
    ports:
      - 8888:8888
    volumes:
      - shared-workspace:/opt/workspace
      
############################## spark #################################       
  spark-master:
    image: spark-master
    container_name: spark-master
    networks:
      - capstone_project
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - shared-workspace:/opt/workspace
  spark-worker-1:
    image: spark-worker
    container_name: spark-worker-1
    networks:
      - capstone_project
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8081:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
  spark-worker-2:
    image: spark-worker
    container_name: spark-worker-2
    networks:
      - capstone_project
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
  spark-worker-3:
    image: spark-worker
    container_name: spark-worker-3
    networks:
      - capstone_project
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8083:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
      
      
############################## kafka #################################   
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - capstone_project
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.0.0
    hostname: broker
    container_name: broker
    networks:
      - capstone_project
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      
############################## kibana & elastic search ################################   
  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      nproc: 3000
      nofile: 65536
      memlock: -1
    deploy:
      resources:
        limits:
          memory: 2g
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - capstone_project
    ports:
      - 9200:9200
  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
      - "xpack.security.enabled=false"
    networks:
      - capstone_project
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
